name: mongo-sharding
services:
  configSrv0:
    image: mongo:latest
    container_name: configSrv0 
    restart: always
    ports:
      - "27117:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config0-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  configSrv1:
    image: mongo:latest
    container_name: configSrv1 
    restart: always
    ports:
      - "27217:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.50
    volumes:
      - config1-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  configSrv2:
    image: mongo:latest
    container_name: configSrv2 
    restart: always
    ports:
      - "27317:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.51
    volumes:
      - config2-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  shard0:
    image: mongo:latest
    container_name: shard0
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard00-data:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard0", 
        "--bind_ip_all",
        "--port",
        "27018"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard01-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1", 
        "--bind_ip_all",
        "--port",
        "27019"
      ]
  router:
    image: mongo:latest
    container_name: router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command:
      [
        "mongos",
        "--configdb", 
        "config_server/configSrv0:27017,configSrv1:27017,configSrv2:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - router
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://173.17.0.7:27020"
      MONGODB_DATABASE_NAME: "somedb"
    networks:
      app-network:
        ipv4_address: 173.17.0.11
networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16
volumes:
  config0-data:
  config1-data:
  config2-data:
  shard00-data:
  shard01-data: