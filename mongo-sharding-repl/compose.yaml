name: mongo-sharding-repl
services:

  #
  # Конфигурационные сервера
  # host port offset +0
  #
  #
  # configSrv0 | 173.17.0.2 | 27017:27017
  # configSrv1 | 173.17.0.3 | 27018:27017
  # configSrv2 | 173.17.0.4 | 27019:27017
  #
  configSrv0:
    image: mongo:latest
    container_name: configSrv0 
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.2
    volumes:
      - config0-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 30s
      start_period: 10s
  configSrv1:
    image: mongo:latest
    container_name: configSrv1 
    restart: always
    ports:
      - "27018:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.3
    volumes:
      - config1-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 30s
      start_period: 10s
  configSrv2:
    image: mongo:latest
    container_name: configSrv2 
    restart: always
    ports:
      - "27019:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.4
    volumes:
      - config2-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ] 
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 30s
      start_period: 10s
  
  #
  # Шарды
  #
  # host port offset +100 
  #
  # shard0-0 | 173.17.1.0 | 27117:27017
  # shard0-1 | 173.17.1.1 | 27118:27017
  # shard0-2 | 173.17.1.2 | 27119:27017
  #
  # shard1-0 | 173.17.1.3 | 27120:27017
  # shard1-1 | 173.17.1.4 | 27121:27017
  # shard1-2 | 173.17.1.5 | 27122:27017
  #
  shard0-0:
    image: mongo:latest
    container_name: shard0-0
    restart: always
    ports:
      - "27117:27017"
    networks:
      app-network:
        ipv4_address: 173.17.1.0
    volumes:
      - shard00-data:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard0", 
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 30s
      start_period: 10s   
  shard0-1:
    image: mongo:latest
    container_name: shard0-1
    restart: always
    ports:
      - "27118:27017"
    networks:
      app-network:
        ipv4_address: 173.17.1.1
    volumes:
      - shard01-data:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard0", 
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s
  shard0-2:
    image: mongo:latest
    container_name: shard0-2
    restart: always
    ports:
      - "27119:27017"
    networks:
      app-network:
        ipv4_address: 173.17.1.2
    volumes:
      - shard02-data:/data/db
    command:
      [
        "--shardsvr", 
        "--replSet",
        "shard0", 
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 10s 
  shard1-0:
    image: mongo:latest
    container_name: shard1-0
    restart: always
    ports:
      - "27020:27017"
    networks:
      app-network:
        ipv4_address: 173.17.1.3
    volumes:
      - shard10-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1", 
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 30s
      start_period: 10s
  shard1-1:
    image: mongo:latest
    container_name: shard1-1
    restart: always
    ports:
      - "27021:27017"
    networks:
      app-network:
        ipv4_address: 173.17.1.4
    volumes:
      - shard11-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1", 
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 30s
      start_period: 10s
  shard1-2:
    image: mongo:latest
    container_name: shard1-2
    restart: always
    ports:
      - "27022:27017"
    networks:
      app-network:
        ipv4_address: 173.17.1.5
    volumes:
      - shard12-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "shard1", 
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 30s
      start_period: 10s

  #
  # Роутер
  # host port offset +200 
  #
  # router | 173.17.2.0 | 27217:27017
  #
  router:
    image: mongo:latest
    container_name: router
    restart: always
    ports:
      - "27217:27017"
    networks:
      app-network:
        ipv4_address: 173.17.2.0
    command:
      [
        "mongos",
        "--configdb", 
        "config_server/configSrv0:27017,configSrv1:27017,configSrv2:27017",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 30s
      start_period: 10s
  
  
  #
  # Приложение
  # host port offset +0
  #
  # pymongo_api | 173.17.3.1 | 8080:8080
  #
  pymongo_api:
    container_name: pymongo_api
    build: 
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - router
    ports:
      - 18080:8080
    environment:
      MONGODB_URL: "mongodb://173.17.2.0:27017"
      MONGODB_DATABASE_NAME: "somedb"
    networks:
      app-network:
        ipv4_address: 173.17.3.1
networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16
volumes:
  config0-data:
  config1-data:
  config2-data:
  shard00-data:
  shard01-data:
  shard02-data:
  shard10-data:
  shard11-data:
  shard12-data: